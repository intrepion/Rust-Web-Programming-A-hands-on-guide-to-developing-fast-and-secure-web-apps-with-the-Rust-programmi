#[cfg(test)]
mod should {
    use super::*;

    #[test]
    fn succeed_some_function_when_run() {
        let expected = 0;
        let actual = CustomMap::new().body.len();

        assert_eq!(expected, actual);
    }
}

use std::collections::HashMap;

#[derive(Debug)]
enum AllowedData {
    S(String),
    I(i8),
}

#[derive(Debug)]
struct CustomMap {
    body: HashMap<String, AllowedData>,
}

impl CustomMap {

    fn new() -> CustomMap {
        return CustomMap {
            body: HashMap::new()
        }
    }
}

fn main() {

    // defining a new hash map
    let mut map = CustomMap::new();
}
